import numpy as np
import pandas as pd


def transformToStorableFormat(spline_data, index_data):

    """ Uncompress the sparse representation
    """
    lower_counter = 0.0
    higher_counter = 0.0
    compr_list = []
    compr_idx = []
    for i in np.arange(0, len(index_data), step=2):
        if i == 0:
            higher_counter += (index_data[i+1] - index_data[i])
        else:
            lower_counter = higher_counter
            higher_counter += (index_data[i+1] - index_data[i])

        compr_list.append(np.array(spline_data[lower_counter:higher_counter],
                          dtype=np.float16))
        compr_idx.append([index_data[i], index_data[i+1]])
    compr_idx = np.array(compr_idx, dtype=np.uint8)
    return compr_list, compr_idx


def getPDFinNumpyArray(data):
    #first get the decompressed pdf
    zcols = [c for c in data.keys() if 'pdf_' in c]
    pdf_z_center = np.array([float(c.split('f_')[-1]) for c in zcols])
    return np.column_stack((pdf_z_center, data[zcols].T)), np.array(data['COADD_OBJECTS_ID'])


def getPandasDataFrame(compress_list, compress_idx, data):

    compr_pdf = pd.DataFrame()
    #compr_pdf['COADD_OBJECTS_ID'] = np.array(data['COADD_OBJECTS_ID'])
    compr_pdf['PDF_compressed'] = np.array(compress_list)
    compr_pdf['compression_info_1'] = np.array(compress_idx, dtype='uint8')[:, 0]
    compr_pdf['compression_info_2'] = np.array(compress_idx, dtype='uint8')[:, 1]
    return compr_pdf


def convertArrayPDFtoPandasCompressedPDF(data, compressed_pdf, coadd_id):
    """ Store a compressed PDf in hdf5 format
    Parameters:
    -----------
    input_hdf5: string, specifying the name of the input hdf5 file
    coadd_id: numpy array, vector of coadded object ids
    compressed_pdf: pdf representation generated by the compress routine

    """

    compress_list, compress_idx = transformToStorableFormat(compressed_pdf[0], compressed_pdf[1])
    pandas_data_frame = getPandasDataFrame(compress_list, compress_idx, data)
    #pandas_data_frame['COADD_OBJECTS_ID'] = coadd_id
    return pandas_data_frame


def addCoaddID(compr_data, Coaddchunk):
    """
    compr_data: pdDataFrame
    Coaddchunk: pdDataFrame

    """




